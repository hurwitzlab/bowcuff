{   "available": true,
    "checkpointable": false,
    "defaultMaxRunTime": "24:00:00",
    "defaultMemoryPerNode": 32,
    "defaultNodeCount": 1,
    "defaultProcessorsPerNode": 68,
    "defaultQueue": "normal",
    "deploymentPath": "bbolduc-iplant-2015/apps/BowtieBatch-1.0.0",
    "deploymentSystem": "data.iplantcollaborative.org",
    "executionSystem": "tacc-stampede2-bbt4k0",
    "executionType": "HPC",
    "helpURI": "https://protocols.io/view/mapping-metagenomic-reads-to-reference-sequences-c-gv2bw8e",
    "inputs": [
        {
            "details": {
                "argument": null,
                "description": "FASTA-formatted sequence file containing sequences/references reads are to be aligned against.",
                "label": "Reference file with FASTA-formatted sequences.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "input_db",
            "semantics": {
                "fileTypes": [
                    "TEXT-0", "FASTA-0"
                ],
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "agave://data.iplantcollaborative.org/shared/iplantcollaborative/example_data/bowtiedirbatch/NC_000913.fna",
                "enquote": false,
                "order": 0,
                "required": true,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Directory containing the reads files to be aligned.",
                "label": "Directory with reads.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "reads_dir",
            "semantics": {
                "fileTypes": [
                    "TEXT-0"
                ],
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "agave://data.iplantcollaborative.org/shared/iplantcollaborative/example_data/bowtiedirbatch/NC_000913.fna",
                "enquote": false,
                "order": 0,
                "required": true,
                "visible": true
            }
        }
    ],
    "isPublic": false,
    "label": "BowtieBatch",
    "longDescription": "BowtieBatch is a python-powered wrapper for Bowtie2 and Samtools. It will execute Bowtie2/Samtools on an entire directory of reads files.",
    "modules": ["purge", "load TACC"],
    "name": "BowtieBatch",
    "ontology": ["http://sswapmeet.sswap.info/agave/apps/Application"],
    "outputs": [],
    "parallelism": "SERIAL",
    "parameters": [
        {
            "details": {
                "argument": null,
                "description": "File format of reads to be aligned.",
                "label": "File extension.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "input_fmt",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "fastq",
                "enquote": false,
                "enum_values": [
                    {
                        "fastq": "FASTQ (*.fastq)"
                    },
                    {
                        "fasta": "FASTA"
                    },
                    {
                        "fq": "FASTQ (*.fq)"
                    }
                ],
                "order": 0,
                "required": true,
                "type": "enumeration",
                "visible": true
            }
        },
        {
            "details": {
                "argument": "--interleaved",
                "description": "If enabled, will treat each file as INTERLEAVED and process them as paired files.",
                "label": "Interleaved files.",
                "repeatArgument": false,
                "showArgument": false
            },

            "id": "interleaved",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 0,
                "ontology": [
                    "xs:boolean"
                ]
            },
            "value": {
                "default": false,
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "bool",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Paired or unpaired reads?",
                "label": "Read type",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "read_types",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "mixed",
                "enquote": false,
                "enum_values": [
                    {
                        "paired": "Reads to be aligned are paired."
                    },
                    {
                        "unpaired": "Reads to be aligned are unpaired."
                    },
                    {
                        "mixed": "Reads to be aligned include both paired and unpaired."
                    }
                ],
                "order": 0,
                "required": true,
                "type": "enumeration",
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Levenshtein distance between filenames. 1 for paired or unpaired only, 2-3 for mixed.",
                "label": "Levenshtein distance between filenames. See documentation. 1 paired/unpaired only. 3 mixed.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "dist",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "1",
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "string",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": "--keep-sam",
                "description": "If enabled, SAM files will be preserved during BAM file generation.",
                "label": "Keep SAM files.",
                "repeatArgument": false,
                "showArgument": false
            },

            "id": "keep_sam",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 0,
                "ontology": [
                    "xs:boolean"
                ]
            },
            "value": {
                "default": false,
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "bool",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Log file name",
                "label": "Log file name",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "logFile",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "xs:string"
                ]
            },
            "value": {
                "default": "bowtie2-read-mapping.log",
                "enquote": false,
                "order": 0,
                "required": true,
                "type": "string",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": "--merge-results",
                "description": "If enabled, and if multiple reads are supplied, combine the bowtie2 results into one file.",
                "label": "Merge results",
                "repeatArgument": false,
                "showArgument": false
            },

            "id": "merge_results",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 0,
                "ontology": [
                    "xs:boolean"
                ]
            },
            "value": {
                "default": false,
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "bool",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Merged file name. Only used if merge-results is used.",
                "label": "Merged file name",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "merge_name",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": [
                    "xs:string"
                ]
            },
            "value": {
                "default": "bowtie2-run.sam",
                "enquote": false,
                "order": 0,
                "required": true,
                "type": "string",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Whether the entire read must align (end-to-end) or only a local region (local)",
                "label": "Local or global alignment",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "alignment_type",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "end-to-end",
                "enquote": false,
                "enum_values": [
                    {
                        "end-to-end": "Entire read must align."
                    },
                    {
                        "local": "Local region of read must align."
                    }
                ],
                "order": 0,
                "required": true,
                "type": "enumeration",
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "End-to-end alignment presets. Only used if end-to-end alignment is selected.",
                "label": "End-to-end alignment presets",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "end_to_end_presets",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "sensitive",
                "enquote": false,
                "enum_values": [
                    {
                        "very-fast": "very-fast: -D 5 -R 1 -N 0 -L 22 -i S,0,2.50"
                    },
                    {
                        "fast": "fast: -D 10 -R 2 -N 0 -L 22 -i S,0,2.50"
                    },
                    {
                        "sensitive": "sensitive: -D 15 -R 2 -N 0 -L 22 -i S,1,1.15 (default)"
                    },
                    {
                        "very-sensitive": "very-sensitive: -D 20 -R 3 -N 0 -L 20 -i S,1,0.50"
                    }
                ],
                "order": 0,
                "required": true,
                "type": "enumeration",
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Local alignment presets. Only used if local alignment is selected.",
                "label": "Local alignment presets",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "local_presets",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "sensitive-local",
                "enquote": false,
                "enum_values": [
                    {
                        "very-fast-local": "very-fast-local: -D 5 -R 1 -N 0 -L 25 -i S,1,2.00"
                    },
                    {
                        "fast-local": "fast-local: -D 10 -R 2 -N 0 -L 22 -i S,1,1.75"
                    },
                    {
                        "sensitive-local": "sensitive-local: -D 15 -R 2 -N 0 -L 20 -i S,1,0.75 (default)"
                    },
                    {
                        "very-sensitive-local": "very-sensitive-local: -D 20 -R 3 -N 0 -L 20 -i S,1,0.50"
                    }
                ],
                "order": 0,
                "required": true,
                "type": "enumeration",
                "visible": true
            }
        },
        {
            "details": {
                "argument": "--non-deterministic",
                "description": "Bowtie 2 will use the current time to re-initialize the pseudo-random number generator. Useful when the input consists of many identical reads",
                "label": "Use non-deterministic method.",
                "repeatArgument": false,
                "showArgument": false
            },

            "id": "non_deterministic",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 0,
                "ontology": [
                    "xs:boolean"
                ]
            },
            "value": {
                "default": false,
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "bool",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Trim X bases from 5'/left end of reads.",
                "label": "Trim 5' bases.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "trim5",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "0",
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "string",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Trim X bases from 3'/right end of reads.",
                "label": "Trim 3' bases.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "trim3",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "0",
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "string",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Minimum fragment length.",
                "label": "Minimum fragment length.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "minFragLen",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "0",
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "string",
                "validator": null,
                "visible": true
            }
        },
        {
            "details": {
                "argument": null,
                "description": "Maximum fragment length.",
                "label": "Maximum fragment length.",
                "repeatArgument": false,
                "showArgument": false
            },
            "id": "maxFragLen",
            "semantics": {
                "maxCardinality": 1,
                "minCardinality": 1,
                "ontology": []
            },
            "value": {
                "default": "2000",
                "enquote": false,
                "order": 0,
                "required": false,
                "type": "string",
                "validator": null,
                "visible": true
            }
        }

    ],
    "shortDescription": "BowtieBatch aligns reads from entire directories.",
    "tags": [
        "iVirus",
        "Gene Mapping",
        "Metagenomics"
    ],
    "templatePath": "wrapper.sh",
    "testPath": "test.sh",
    "version": "1.0.0"
}
.0"
}
